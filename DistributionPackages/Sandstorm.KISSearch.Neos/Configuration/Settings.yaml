Sandstorm:
  KISSearch:

    # read-side / search query time
    query:
      searchSources:
        'neos-content-source':
          class: \Sandstorm\KISSearch\Neos\Query\NeosContentSource
      resultFilters:
        'neos-document-filter':
          class: \Sandstorm\KISSearch\Neos\Query\NeosDocumentQuery
        'neos-node-filter':
          class: \Sandstorm\KISSearch\Neos\Query\NeosNodeQuery
      typeAggregators:
        'neos-document-type-aggregator':
          class: \Sandstorm\KISSearch\Neos\Query\NeosDocumentQuery
        'neos-node-type-aggregator':
          class: \Sandstorm\KISSearch\Neos\Query\NeosNodeQuery

      endpoints:
        'default':
          queryOptions:
            contentRepository: 'default'
          filters:
            'neos':
              sources:
                - neos-content-source
              filter: neos-document-filter
              resultType: neos-document
          typeAggregators:
            neos-document: neos-document-type-aggregator

        'neos-backend':
          queryOptions:
            contentRepository: 'default'
          filters:
            'neos':
              sources:
                - neos-content-source
              filter: neos-document-filter
              resultType: neos-document
          typeAggregators:
            neos-node: neos-document-type-aggregator

    # write-side / SQL migrations
    schemas:
      'neos-content':
        # creates and drops the SQL schema needed for fulltext searching
        class: \Sandstorm\KISSearch\Neos\Schema\NeosContentSearchSchema
        # refreshes the "nodes and their documents" relation
        refresher: \Sandstorm\KISSearch\Neos\Schema\NeosContentSearchSchema
        # configuration for the Neos CR KISSearch schema
        options:
          # which content repository to use
          contentRepository: 'default'
          # explicit filter to exclude specific node types from search indexing
          excludedNodeTypes:
            - 'Neos.Neos:Shortcut'
          # only document node types that extends this get indexed
          # also only content nodes that lives below documents extending this get indexed
          # defaults to 'Neos.Neos:Document' when not configured
          baseDocumentNodeType: 'Neos.Neos:Document'
          # only content node types that extends this get indexed
          # defaults to 'Neos.Neos:Content' when not configured
          baseContentNodeType: 'Neos.Neos:Content'
