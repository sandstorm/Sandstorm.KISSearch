Sandstorm:
  KISSearch:

    # write-side / SQL migrations
    schemas:
      'neos-content': \Sandstorm\KISSearch\Neos\Schema\NeosContentSearchSchema

    # read-side / search query time
    query:
      searchSources:
        'neos-content-source':
          class: \Sandstorm\KISSearch\Neos\Query\NeosContentQuery
      resultFilters:
        'neos-content-filter':
          class: \Sandstorm\KISSearch\Neos\Query\NeosContentQuery
      typeAggregators:
        'neos-document-type-aggregator':
          class: \Sandstorm\KISSearch\Neos\Query\NeosContentQuery

      endpoints:
        'default':
          filters:
            'default':
              filter: neos-content-filter
              resultType: neos-document
              sources:
                - neos-content-source
          typeAggregators:
            neos-document: neos-document-type-aggregator

    Neos:
      # TODO support multiple content repositories
      contentRepositoryId: 'default'
