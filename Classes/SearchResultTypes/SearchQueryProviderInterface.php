<?php

namespace Sandstorm\KISSearch\SearchResultTypes;

use Sandstorm\KISSearch\SearchResultTypes\QueryBuilder\AdditionalQueryParameterDefinitions;
use Sandstorm\KISSearch\SearchResultTypes\QueryBuilder\ResultMergingQueryParts;
use Sandstorm\KISSearch\SearchResultTypes\QueryBuilder\ResultSearchingQueryParts;

/**
 * API extension point for custom search result types.
 * The actual search query that is generated by KISSearch depends on the following factors:
 * <ol>
 *  <li>The syntax ofc. depends on the actual used database (MariaDB, Postgres, ...).
 *  For MariaDB and Postgres, the overall query structures look very similar. The main difference are the
 *  supported vanilla functions and the fulltext search mechanism.</li>
 *  <li>The "Search Strategy" that is used (global limit, limit per result type).</li>
 * </ol>
 *
 * All in all, the structure looks like:
 *
 *
 * with $searchingParts...,
 *   all_results as $mergingParts
 * select ... from all_results;
 *
 * <pre>
 * with
 *    searching_part_type1_results as (
 *        select ..., score from table_1 where ... and fulltext = :searchTerms
 *    ),
 *    searching_part_type2_results as (
 *         select ..., score from table_2 where ... and fulltext = :searchTerms
 *    ),
 *    ... more result types,
 *
 *    merging_parts_all_results as (
 *        (merging_part_1 group by id)
 *        union
 *        (merging_part_2 group by id)
 *        union
 *        ...
 *    )
 * select id, title, score from merging_parts_all_results
 * </pre>
 *
 */
interface SearchQueryProviderInterface
{

    function getResultSearchingQueryParts(): ResultSearchingQueryParts;

    function getResultMergingQueryParts(): ResultMergingQueryParts;

    function getAdditionalQueryParameters(): ?AdditionalQueryParameterDefinitions;

}
